# This is based on the default configuration auto-generated by i3-config-wizard.
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

####################
# General settings #
####################

# Set the mod key to the Windows key
set $mod Mod4

# Font for window titles, will also be used by the bar unless overridden
font pango: Noto Sans Nerd Font Medium 9

# Use tiling for new containers
workspace_layout default

# Automatically determine the tiling orientation
default_orientation auto

# Alignment for window titles
title_align center

# Define window gap settings
gaps inner 3
gaps outer 0
smart_gaps off

# Border settings
default_border normal 2
hide_edge_borders smart

# Do not move focus to mouse pointer
focus_follows_mouse no

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

######################
# Basic key bindings #
######################

# Reload the configuration file
bindsym $mod+Shift+c reload

# Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Exit from i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Do you really want to exit i3?' -B 'Yes, exit i3' 'i3-msg exit'"

# Kill the focused window
bindsym $mod+Shift+q kill
# bindsym $mod+q kill

# Change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+odiaeresis focus right

# Change focus with the cursor keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+odiaeresis move right

# Move focused window with the cursor keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Split in horizontal orientation
bindsym $mod+h split h

# Split in vertical orientation
bindsym $mod+v split v

# Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# Change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Focus the parent container
bindsym $mod+a focus parent

# Focus the child container
# bindsym $mod+d focus child

# Start a terminal (can set $TERMINAL to the preferred one)
bindsym $mod+Return exec i3-sensible-terminal

# Start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# A more modern dmenu replacement is rofi
bindsym $mod+d exec --no-startup-id "rofi -show drun \
    -modi drun,window,ssh,filebrowser,run \
    -theme ~/.config/rofi/themes/launcher-default.rasi"

# Window switcher with rofi (key above tab)
bindcode $mod+49 exec --no-startup-id "rofi -show window \
    -modi window \
    -theme ~/.config/rofi/themes/launcher-squared.rasi"

# Show a fancy power menu with rofi
bindsym $mod+BackSpace exec --no-startup-id ~/.config/i3/scripts/powermenu.sh

# An alternative way of displaying a power menu with rofi
# bindsym $mod+BackSpace exec --no-startup-id "rofi -show pm \
#     -modi pm:~/.config/rofi/scripts/power-menu \
#     -theme ~/.config/rofi/themes/launcher-squared.rasi \
#     -theme-str 'window {width: 8em;} listview {lines: 6;}'"

##############
# Workspaces #
##############

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Cycle through the available workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# Switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Go back to previous workspace when switching to currently focused workspace
workspace_auto_back_and_forth yes

# Use workspaces on different displays (get them from xrandr):
# workspace $ws1 output VGA-0
# workspace $ws2 output VGA-0
# workspace $ws3 output HDMI-0
# workspace $ws4 output HDMI-0
# workspace $ws5 output HDMI-0

# Move focused container to a different output
bindsym $mod+Control+j move container to output left
bindsym $mod+Control+k move container to output down
bindsym $mod+Control+l move container to output up
bindsym $mod+Control+odiaeresis move container to output right

# Move focused container to a different output with the cursor keys
bindsym $mod+Control+Left move container to output left
bindsym $mod+Control+Down move container to output down
bindsym $mod+Control+Up move container to output up
bindsym $mod+Control+Right move container to output right

#########################
# Function key bindings #
#########################

# Take a screenshot
bindsym Print exec --no-startup-id scrot ~/%Y-%m-%d_%T-screenshot.png && notify-send "Sceenshot saved to ~/$(date +%Y-%m-%d_%T)-screenshot.png"

# Use pactl to adjust volume in PulseAudio
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +2% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -2% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Playback control
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

# Backlight control
# bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight +10 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"
# bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -10 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"

###############
# Resize mode #
###############

set $modeResize resize

mode "$modeResize" {
    # Shrink or grow the focused windows height or width
    bindsym j resize shrink width 10 px or 5 ppt
    bindsym k resize grow height 10 px or 5 ppt
    bindsym l resize shrink height 10 px or 5 ppt
    bindsym odiaeresis resize grow width 10 px or 5 ppt

    # Same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 5 ppt
    bindsym Down resize grow height 10 px or 5 ppt
    bindsym Up resize shrink height 10 px or 5 ppt
    bindsym Right resize grow width 10 px or 5 ppt

    # Back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

bindsym $mod+r mode "$modeResize"

#############
# Gaps mode #
#############

set $modeGaps Gaps: (o)uter, (i)nner
set $modeGapsOuter Outer gaps: Up or Down to change, 0 to reset (+Shift for global)
set $modeGapsInner Inner gaps: Up or Down to change, 0 to reset (+Shift for global)

bindsym $mod+Shift+g mode "$modeGaps"

mode "$modeGaps" {
    bindsym o      mode "$modeGapsOuter"
    bindsym i      mode "$modeGapsInner"

    # Back to normal: Enter or Escape or $mod+Shift+g
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+Shift+g mode "default"
}

mode "$modeGapsOuter" {
    # Shrink or grow the outer gaps on the current workspace
    bindsym k gaps outer current plus 5
    bindsym l gaps outer current minus 5
    bindsym 0 gaps outer current set 0

    # Shrink or grow the outer gaps on all workspaces
    bindsym Shift+k gaps outer all plus 5
    bindsym Shift+l gaps outer all minus 5
    bindsym Shift+0 gaps outer all set 0

    # Same bindings, but for the arrow keys
    bindsym Up gaps outer current plus 5
    bindsym Down gaps outer current minus 5
    bindsym Shift+Up gaps outer all plus 5
    bindsym Shift+Down gaps outer all minus 5

    # Back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+Shift+g mode "default"
}

mode "$modeGapsInner" {
    # Shrink or grow the inner gaps on the current workspace
    bindsym k gaps inner current plus 5
    bindsym l gaps inner current minus 5
    bindsym 0 gaps inner current set 0

    # Shrink or grow the inner gaps on all workspaces
    bindsym Shift+k gaps inner all plus 5
    bindsym Shift+l gaps inner all minus 5
    bindsym Shift+0 gaps inner all set 0

    # Same bindings, but for the arrow keys
    bindsym Up gaps inner current plus 5
    bindsym Down gaps inner current minus 5
    bindsym Shift+Up gaps inner all plus 5
    bindsym Shift+Down gaps inner all minus 5

    # Back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+Shift+g mode "default"
}

###############
# Launch mode #
###############

set $modeLaunch Launch: [W] Firefox, [F] Filemanager, [T] Terminal

mode "$modeLaunch" {
    bindsym w exec firefox, mode "default"
    bindsym f exec thunar, mode "default"
    bindsym t exec i3-sensible-terminal, mode "default"

    # Back to normal: Enter or Escape or $mod+Shift+Enter
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+Shift+Enter mode "default"
}

bindsym $mod+Shift+Return mode "$modeLaunch"

#######################
# System control mode #
#######################

set $modeSysControl System: [L]ock, [E]xit, [S]uspend, [H]ibernate, [R]eboot, [CTRL+S]hutdown

mode "$modeSysControl" {
    bindsym l exec --no-startup-id loginctl lock-session, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym h exec --no-startup-id systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Control+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # Back to normal: Enter or Escape or $mod+BackSpace
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+Shift+s mode "default"
}

bindsym $mod+Shift+s mode "$modeSysControl"

# Lock the screen (via signaling xss-lock)
bindsym $mod+Shift+x exec --no-startup-id loginctl lock-session

##############################
# Application specific rules #
##############################

# Bindings for launching common applications
bindsym $mod+p exec --no-startup-id pavucontrol

# Set floating (nontiling) for special windows
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="Lxappearance"] floating enable
for_window [class=feh|vlc|Xarchiver] floating enable
for_window [window_role="About"] floating enable

# Bind windows to a workspace and focus to them on startup
# assign [class="Xfce4-terminal"] workspace number $ws1
# assign [class="(?i)firefox"] workspace number $ws2
# assign [class="Thunar"] workspace number $ws3

# Automatic set focus new window if it opens on another workspace than the current
# for_window [class=Xfce4-terminal] focus
# for_window [class=(?i)firefox] focus
# for_window [class=Thunar] focus

###################################
# Autostart services/applications #
###################################

# Set the wallpaper (use "feh --bg-fill <imagepath>" to define one)
exec --no-startup-id sleep 1 && ~/.fehbg

# Alternatively use nitrogen for the background
# exec --no-startup-id sleep 2 && nitrogen --restore

# Set the command for locking the screen (via xss-lock, see below)
# set $screenlocker i3lock --nofork --color=303030 --ignore-empty-password --show-failed-attempts
set $screenlocker ~/.config/i3/scripts/i3lock-pixel --nofork --ignore-empty-password --show-failed-attempts

# Start xss-lock to trigger the locking based on systemd and DPMS events
# Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- $screenlocker

# Set DPMS signaling timeout after 15 minutes (values are standby, suspend, off)
exec --no-startup-id xset +dpms dpms 900 900 0

# Enable screensaver and immediately lock the screen after 10 minutes
exec --no-startup-id xset s 600 0

# Start XDG autostart .desktop files using dex (check /etc/xdg/autostart/)
# See also https://wiki.archlinux.org/index.php/XDG_Autostart
# exec --no-startup-id dex --autostart --environment i3

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Launch PulseAudio system tray
exec --no-startup-id pasystray

# Start dunst for notifications
exec --no-startup-id /usr/bin/dunst

# Run the picom compositor for transparency
# exec --no-startup-id picom -f

####################
# Colors & Theming #
####################

# Nord color palette
set $nord0-polar    #2e3440
set $nord1-polar    #3b4252
set $nord2-polar    #434c5e
set $nord3-polar    #4c566a
set $nord4-snow     #d8dee9
set $nord5-snow     #e5e9f0
set $nord6-snow     #eceff4
set $nord7-frost    #8fbcbb
set $nord8-frost    #88c0d0
set $nord9-frost    #81a1c1
set $nord10-frost   #5e81ac
set $nord11-aurora  #bf616a
set $nord12-aurora  #d08770
set $nord13-aurora  #ebcb8b
set $nord14-aurora  #a3be8c
set $nord15-aurora  #b48ead

# Class                  # Border        # Backgr.       # Text        # Indic.        # Child border
client.focused           $nord8-frost    $nord8-frost    $nord0-polar  $nord8-frost    $nord8-frost
client.focused_inactive  $nord3-polar    $nord3-polar    $nord5-snow   $nord3-polar    $nord3-polar
client.unfocused         $nord1-polar    $nord1-polar    $nord4-snow   $nord1-polar    $nord1-polar
client.urgent            $nord13-aurora  $nord13-aurora  $nord0-polar  $nord13-aurora  $nord13-aurora
client.placeholder       #000000         $nord15-aurora  $nord0-polar  #000000         $nord15-aurora

client.background        $nord0-polar

################
# Bar settings #
################

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    font pango: Noto Sans Nerd Font Medium 10
    status_command i3status

    colors {
        background         $nord0-polar
        statusline         $nord6-snow
        separator          $nord3-polar

        # Class              # Border        # Backgr.       # Text
        focused_workspace    $nord9-frost    $nord9-frost    $nord0-polar
        active_workspace     $nord0-polar    $nord3-polar    $nord5-snow
        inactive_workspace   $nord0-polar    $nord1-polar    $nord4-snow
        urgent_workspace     $nord13-aurora  $nord13-aurora  $nord0-polar
        binding_mode         $nord15-aurora  $nord15-aurora  $nord0-polar
    }
}
